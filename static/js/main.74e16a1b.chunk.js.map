{"version":3,"sources":["assets/images/avatar.png","components/contacts/contact/Contact.module.css","redux-forms/validators.js","redux/auth-reducer.js","components/login/LoginForm.jsx","components/login/Login.jsx","redux/contacts-reducer.js","redux-forms/FormControls.jsx","components/contacts/addNewContactForm/AddNewContactForm.jsx","components/contacts/contact/ContactEditModeForm.jsx","components/contacts/contact/Contact.jsx","components/contacts/Search.jsx","components/contacts/Contacts.jsx","components/contacts/ContactsContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/login/Login.module.css","components/contacts/addNewContactForm/AddNewContactForm.module.css","components/contacts/Contacts.module.css","redux-forms/FormControls.module.css"],"names":["module","exports","max","LOGIN","initialState","isAuth","authReducer","state","action","type","payload","reduxForm","form","handleSubmit","className","styles","loginForm","onSubmit","Field","component","placeholder","name","id","htmlFor","Login","useSelector","auth","dispatch","useDispatch","to","loginPage","formData","buttonsBlock","contacts","firstName","secondName","number","address","description","contactsReducer","contact","required","value","undefined","isNaN","Number","maxLength20","length","Input","input","meta","props","hasError","touched","error","addNewContactForm","addNewContactForm_buttonClose","onClick","setAddNewContactForm","validate","addNewContactForm_buttonSave","ContactEditModeForm","onChangeInput","deleteContactHandler","onChange","row","buttons","Contact","useState","setFormData","editMode","setEditMode","newContactsArray","map","c","editContact","setSearch","e","target","src","avatar","alt","contact_name","contact_address","contact_button","Search","textSearch","setTextSearch","useEffect","matchesItems","item","toLowerCase","includes","push","setMatchesContacs","searchContacts","autoFocus","Contacts","search","matchesContacts","key","setMatchesContacts","wrapper","submitNewContactFormHandler","header","connect","addNewContact","deleteContact","Date","now","toString","filter","App","exact","path","render","from","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.74e16a1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.de470447.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3Cl9j\",\"contact_name\":\"Contact_contact_name__DA40I\",\"contact_address\":\"Contact_contact_address__1VH5T\",\"contact_button\":\"Contact_contact_button__3kJut\",\"row\":\"Contact_row__2qSWt\",\"buttons\":\"Contact_buttons__3OzKR\"};","export const required = value =>\r\n    value ? undefined : 'Required'\r\n\r\nexport const number = value =>\r\n    isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const maxLength20 = maxLength(20)\r\n\r\n","\r\n// constants\r\nconst LOGIN = 'auth/LOGIN';\r\n\r\n// state\r\nconst initialState = {\r\n    isAuth: false,\r\n};\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {...state, ...action.payload, isAuth: true};\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\n// action creators\r\nexport const login = (userData) => ({type: LOGIN, payload: userData});\r\n\r\nexport default authReducer","import styles from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nconst LoginForm = ({handleSubmit}) => {\r\n    return <form className={styles.loginForm} onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component='input' placeholder='login' type='text' name='login'/>\r\n        </div>\r\n        <div>\r\n            <Field component='input' type='password' name='pass'/>\r\n        </div>\r\n        <div>\r\n            <Field component='input' type='checkbox' name='rememberMe' id='rememberMe'/>\r\n            <label htmlFor='rememberMe'>Remember me</label>\r\n        </div>\r\n        <button>Login</button>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm)","import React from \"react\";\r\nimport styles from './Login.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nconst Login = () => {\r\n\r\n    const isAuth = useSelector(state => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    if (isAuth) return <Redirect to='/contacts'/>;\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(login(formData))\r\n    };\r\n\r\n    return <div className={styles.loginPage}>\r\n        <LoginForm onSubmit={onSubmit}/>\r\n        <div className={styles.buttonsBlock}>\r\n            <button>Create new account</button>\r\n            <button>Forget password?</button>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Login","\r\n// constants\r\nconst ADD_NEW_CONTACT = 'contacts/ADD_NEW_CONTACT';\r\nconst DELETE_CONTACT = 'contacts/DELETE_CONTACT';\r\nconst EDIT_CONTACT = 'contacts/EDIT_CONTACT';\r\n\r\n// state\r\nconst initialState = {\r\n    contacts: [\r\n        {\r\n            id: 1,\r\n            firstName: 'John',\r\n            secondName: 'Connor',\r\n            number: '+12345678910',\r\n            address: 'address',\r\n            description: 'first',\r\n        },\r\n        {\r\n            id: 2,\r\n            firstName: 'Adam',\r\n            secondName: 'Jensen',\r\n            number: '+12345678999',\r\n            address: 'address',\r\n            description: 'second',\r\n        },\r\n    ]\r\n};\r\n\r\n// reducer\r\nconst contactsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_CONTACT:\r\n            return {...state, contacts: [...state.contacts, action.contact]};\r\n        case DELETE_CONTACT:\r\n            return {...state, contacts: action.contacts};\r\n        case EDIT_CONTACT:\r\n            return {...state, contacts: action.contacts};\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\n// action creators\r\nexport const addNewContact = (contact) => ({type: ADD_NEW_CONTACT, contact,});\r\nexport const deleteContact = (contacts) => ({type: DELETE_CONTACT, contacts});\r\nexport const editContact = (contacts) => ({type: EDIT_CONTACT, contacts});\r\n\r\nexport default contactsReducer","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <input className={(hasError ? styles.error : ' ')} {...input} {...props}/>\r\n}","import styles from \"./AddNewContactForm.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLength20, number, required} from \"../../../redux-forms/validators\";\r\nimport {Input} from \"../../../redux-forms/FormControls\";\r\n\r\nconst AddNewContactForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={styles.addNewContactForm}>\r\n        <div className={styles.contact}>\r\n            {props.error && <div>ОШИБКА</div>}\r\n            <button className={styles.addNewContactForm_buttonClose} onClick={() => {\r\n                props.setAddNewContactForm(false)\r\n            }}>X\r\n            </button>\r\n            <Field name='firstName' component={Input} validate={[required]} type='text' placeholder='First Name'/>\r\n            <Field name='secondName' component='input' type='text' placeholder='Second Name'/>\r\n            <Field name='number' component={Input} validate={[required, number, maxLength20]} type='text' placeholder='Number'/>\r\n            <Field name='address' component='input' type='text' placeholder='Address'/>\r\n            <Field name='description' component='textarea' placeholder='Description'/>\r\n            <div></div>\r\n            <button className={styles.addNewContactForm_buttonSave}>Save</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({form: 'addNewContact'})(AddNewContactForm)","import styles from \"./Contact.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ContactEditModeForm = ({onSubmit, onChangeInput, deleteContactHandler, formData}) => {\r\n\r\n    return <form onChange={onChangeInput} onSubmit={onSubmit} className={styles.contact}>\r\n        <div className={styles.row}>\r\n            <input value={formData.firstName} name='firstName' type='text' placeholder='First Name'/>\r\n            <input value={formData.secondName} name='secondName' type='text' placeholder='Second Name'/>\r\n        </div>\r\n        <div className={styles.row}>\r\n            <input value={formData.number} name='number' type='tel' placeholder='Number'/>\r\n            <input value={formData.address} name='address' type='text' placeholder='Address'/>\r\n        </div>\r\n        <input value={formData.description} name='description' placeholder='Description'/>\r\n        <div className={styles.buttons}>\r\n            <button type='submit'>Save</button>\r\n            <button onClick={() => deleteContactHandler(formData.id)}>Delete</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ContactEditModeForm\r\n","import styles from \"./Contact.module.css\";\r\nimport avatar from \"../../../assets/images/avatar.png\";\r\nimport React, {useState} from \"react\";\r\nimport ContactEditModeForm from \"./ContactEditModeForm\";\r\n\r\nconst Contact = (props) => {\r\n\r\n    let [formData, setFormData] = useState({\r\n        id: props.id,\r\n        firstName: props.firstName,\r\n        secondName: props.secondName,\r\n        number: props.number,\r\n        address: props.address,\r\n        description: props.description,\r\n    });\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onSubmit = () => {\r\n        let newContactsArray = props.contacts.map(c => {\r\n            if (c.id === formData.id)\r\n                return formData;\r\n            return c\r\n        });\r\n        props.editContact(newContactsArray);\r\n        setEditMode(false);\r\n        props.setSearch(false)\r\n    };\r\n\r\n    const onChangeInput = (e) => {\r\n        setFormData({...formData, ...{[e.target.name]: e.target.value}})\r\n    };\r\n\r\n\r\n    return editMode ? <ContactEditModeForm deleteContactHandler={props.deleteContactHandler} onSubmit={onSubmit}\r\n                                           onChangeInput={onChangeInput} formData={formData}/>\r\n        : <div className={styles.contact}>\r\n            <img src={avatar} alt=\"contact avatar\"/>\r\n            <span className={styles.contact_name}>{props.firstName + '  ' + props.secondName}</span>\r\n            <div>{props.number}<span className={styles.contact_address}>{props.address}</span></div>\r\n            <div>{props.description}</div>\r\n            <div className={styles.contact_button}>\r\n                <button onClick={() => {\r\n                    setEditMode(true)\r\n                }}>edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n};\r\n\r\nexport default Contact","import React, {useEffect, useState} from \"react\";\r\n\r\nconst Search = (props) => {\r\n\r\n    const [textSearch, setTextSearch] = useState('');\r\n\r\n    const searchContacts = (contacts, textSearch) => {\r\n        let matchesItems = [];\r\n        for (let item of contacts) {\r\n            item.name = item.firstName + ' ' + item.secondName;\r\n            if (item.name.toLowerCase().includes(textSearch.toLowerCase())) matchesItems.push(item);\r\n            delete item.name\r\n        }\r\n        return props.setMatchesContacs(matchesItems)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        searchContacts(props.contacts, textSearch)\r\n    }, [textSearch]);\r\n\r\n    const onChange = (value) => {\r\n        setTextSearch(value)\r\n    };\r\n\r\n\r\n    return <>\r\n        <input autoFocus\r\n               value={textSearch}\r\n               onChange={(e) => onChange(e.target.value)}\r\n               type=\"text\"/>\r\n               <button onClick={() => props.setSearch(false)}>Close</button>\r\n    </>\r\n};\r\n\r\n\r\nexport default Search","import React from \"react\";\r\nimport styles from \"./Contacts.module.css\"\r\nimport AddNewContactForm from \"./addNewContactForm/AddNewContactForm\";\r\nimport Contact from \"./contact/Contact\";\r\nimport Search from \"./Search\";\r\n\r\nconst Contacts = (props) => {\r\n\r\n    const selectContacts = () => props.search ? props.matchesContacts : props.contacts;\r\n\r\n    const contacts = selectContacts().map((c) => <Contact contacts={props.contacts}\r\n                                                 editContact={props.editContact}\r\n                                                 setSearch={props.setSearch}\r\n                                                 deleteContactHandler={props.deleteContactHandler}\r\n                                                 key={c.id} {...c}/>);\r\n\r\n    const search = props.search ? <Search contacts={props.contacts}\r\n                                          setMatchesContacs={props.setMatchesContacts}\r\n                                          setSearch={props.setSearch}/>\r\n        : <button onClick={() => props.setSearch(true)}>Search</button>;\r\n\r\n\r\n    return <div className={styles.wrapper}>\r\n        {props.addNewContactForm &&\r\n        <AddNewContactForm onSubmit={props.submitNewContactFormHandler}\r\n                           setAddNewContactForm={props.setAddNewContactForm}/>}\r\n        <div className={styles.header}>\r\n            <h2>Contacts</h2>\r\n            <button onClick={() => props.setAddNewContactForm(true)}>Add new</button>\r\n            {search}\r\n        </div>\r\n        <div className={styles.contacts}>\r\n            {contacts}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Contacts\r\n\r\n\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {addNewContact, deleteContact, editContact} from \"../../redux/contacts-reducer\";\r\nimport Contacts from \"./Contacts\";\r\nimport React, {useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst ContactsContainer = (props) => {\r\n\r\n    const [addNewContactForm, setAddNewContactForm] = useState(false);\r\n\r\n    const [search, setSearch] = useState(false);\r\n    const [matchesContacts, setMatchesContacts] = useState([]);\r\n\r\n\r\n    const deleteContactHandler = (id) => {\r\n        const newContactsArray = props.contacts.filter((c) => c.id !== id);\r\n        props.deleteContact(newContactsArray)\r\n    };\r\n\r\n    const submitNewContactFormHandler = (formData) => {\r\n        formData.id = Date.now().toString();\r\n        props.addNewContact(formData);\r\n        setAddNewContactForm(false)\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return <Contacts submitNewContactFormHandler={submitNewContactFormHandler}\r\n                     setMatchesContacts={setMatchesContacts}\r\n                     matchesContacts={matchesContacts}\r\n                     search={search}\r\n                     setSearch={setSearch}\r\n                     deleteContactHandler={deleteContactHandler}\r\n                     editContact={props.editContact}\r\n                     contacts={props.contacts}\r\n                     addNewContactForm={addNewContactForm}\r\n                     setAddNewContactForm={setAddNewContactForm}/>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.contacts,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {addNewContact, deleteContact, editContact})(ContactsContainer)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Login from \"./components/login/Login\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport ContactsContainer from \"./components/contacts/ContactsContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n        <Switch>\r\n            <Route exact path='/login'\r\n            render={() =>  <Login />}/>\r\n            <Route exact path='/contacts'\r\n                   render={() =>  <ContactsContainer/>}/>\r\n            <Redirect exact from=\"/\" to=\"/login\" />\r\n            <Redirect exact from=\"/contactList/\" to=\"/login\" />\r\n            <Route render={() => <div>404 NOT FOUND</div>}/>\r\n        </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport contactsReducer from \"./contacts-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3x_FG\",\"loginForm\":\"Login_loginForm__-jEsz\",\"buttonsBlock\":\"Login_buttonsBlock__2HoH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"AddNewContactForm_contact__DbBxK\",\"addNewContactForm\":\"AddNewContactForm_addNewContactForm__3wX7a\",\"addNewContactForm_buttonClose\":\"AddNewContactForm_addNewContactForm_buttonClose__2DqLv\",\"addNewContactForm_buttonSave\":\"AddNewContactForm_addNewContactForm_buttonSave__1_2q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__1JB_a\",\"header\":\"Contacts_header__27qps\",\"contacts\":\"Contacts_contacts__1UlnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__mfuxD\"};"],"sourceRoot":""}