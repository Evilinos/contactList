{"version":3,"sources":["components/contacts/contact/Contact.module.css","redux/auth-reducer.js","components/login/LoginContainer.jsx","redux-forms/validators.js","redux/contacts-reducer.js","redux-forms/FormControls.jsx","components/contacts/addNewContactForm/AddNewContactForm.jsx","components/contacts/Contacts.jsx","components/contacts/contact/ContactEditModeForm.jsx","components/contacts/contact/Contact.jsx","components/contacts/ContactsContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/contacts/addNewContactForm/AddNewContactForm.module.css","components/login/Login.module.css","components/contacts/Contacts.module.css","redux-forms/FormControls.module.css","assets/images/avatar.png"],"names":["module","exports","LOGIN","initialState","isAuth","authReducer","state","action","type","payload","LoginForm","props","className","styles","loginForm","onSubmit","handleSubmit","Field","component","placeholder","name","id","htmlFor","reduxForm","form","max","LoginContainer","connect","auth","login","userData","to","loginPage","formData","buttonsBlock","contacts","firstName","secondName","number","address","description","ids","contactsReducer","contact","required","value","undefined","isNaN","Number","maxLength20","length","Input","input","meta","hasError","touched","error","console","log","addNewContactForm","addNewContactForm_buttonClose","onClick","setAddNewContactForm","validate","addNewContactForm_buttonSave","Contacts","wrapper","onSubmitNewContact","header","row","buttons","delete","Contact","useState","editMode","setEditMode","newContactsArray","map","c","editContact","initialValues","src","avatar","alt","contact_name","contact_address","contact_button","addNewContact","deleteContact","onClickDelete","filter","key","App","fallback","exact","path","render","from","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1836d05e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1ML5N\",\"contact_name\":\"Contact_contact_name__SYQUn\",\"contact_address\":\"Contact_contact_address__1m-p_\",\"contact_button\":\"Contact_contact_button__1POYx\",\"row\":\"Contact_row__2JjQR\",\"buttons\":\"Contact_buttons__1CTPu\"};","\r\n// constants\r\nconst LOGIN = 'auth/LOGIN';\r\n\r\n// state\r\nconst initialState = {\r\n    isAuth: false,\r\n};\r\n\r\n// reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {...state, ...action.payload, isAuth: true};\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\n// action creators\r\nexport const login = (userData) => ({type: LOGIN, payload: userData});\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport styles from './Login.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet LoginForm = (props) => {\r\n    return <form className={styles.loginForm} onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component='input' placeholder='login' type='text' name='login'/>\r\n        </div>\r\n        <div>\r\n            <Field component='input' type='password' name='pass'/>\r\n        </div>\r\n        <div>\r\n            <Field component='input' type='checkbox' name='rememberMe' id='rememberMe'/>\r\n            <label htmlFor='rememberMe'>Remember me</label>\r\n        </div>\r\n        <button>Login</button>\r\n    </form>\r\n}\r\n\r\nLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to='/contacts'/>\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.login()\r\n    }\r\n    return <div className={styles.loginPage}>\r\n        <LoginForm onSubmit={onSubmit}/>\r\n        <div className={styles.buttonsBlock}>\r\n            <button>Create new account</button>\r\n            <button>Forget password?</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, {login})(Login)\r\n\r\nexport default LoginContainer","export const required = value =>\r\n    value ? undefined : 'Required'\r\n\r\nexport const number = value =>\r\n    isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const maxLength20 = maxLength(20)\r\n\r\n","const ADD_NEW_CONTACT = 'contacts/ADD_NEW_CONTACT';\r\nconst DELETE_CONTACT = 'contacts/DELETE_CONTACT';\r\nconst EDIT_CONTACT = 'contacts/EDIT_CONTACT';\r\n\r\nconst initialState = {\r\n    contacts: [\r\n        {\r\n            id: 1,\r\n            firstName: 'firstName',\r\n            secondName: 'secondName',\r\n            number: '+12345678910',\r\n            address: 'address',\r\n            description: 'first',\r\n        },\r\n        {\r\n            id: 2,\r\n            firstName: 'firstName',\r\n            secondName: 'secondName',\r\n            number: '+12345678999',\r\n            address: 'address',\r\n            description: 'second',\r\n        },\r\n    ]\r\n};\r\n\r\n\r\nlet ids = 2;\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_CONTACT:\r\n            action.contact.id = ++ids;\r\n            return {...state, contacts: [...state.contacts, action.contact]};\r\n        case DELETE_CONTACT:\r\n            return {...state, contacts: action.contacts};\r\n        case EDIT_CONTACT:\r\n            return {...state, contacts: action.contacts};\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\nexport const addNewContact = (contact) => ({type: ADD_NEW_CONTACT, contact,});\r\nexport const deleteContact = (contacts) => ({type: DELETE_CONTACT, contacts});\r\nexport const editContact = (contacts) => ({type: EDIT_CONTACT, contacts});\r\n\r\nexport default contactsReducer","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <input className={(hasError ? styles.error : ' ')} {...input} {...props}/>\r\n}","import styles from \"./AddNewContactForm.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLength20, number, required} from \"../../../redux-forms/validators\";\r\nimport {Input} from \"../../../redux-forms/FormControls\";\r\n\r\nconst AddNewContactForm = (props) => {\r\n    console.log(props)\r\n    return <form onSubmit={props.handleSubmit} className={styles.addNewContactForm}>\r\n        <div className={styles.contact}>\r\n            {props.error && <div>ОШИБКА</div>}\r\n            <button className={styles.addNewContactForm_buttonClose} onClick={() => {\r\n                props.setAddNewContactForm(false)\r\n            }}>X\r\n            </button>\r\n            <Field name='firstName' component={Input} validate={[required]} type='text' placeholder='First Name'/>\r\n            <Field name='secondName' component='input' type='text' placeholder='Second Name'/>\r\n            <Field name='number' component={Input} validate={[required, number, maxLength20]} type='text' placeholder='Number'/>\r\n            <Field name='address' component='input' type='text' placeholder='Address'/>\r\n            <Field name='description' component='textarea' placeholder='Description'/>\r\n            <div></div>\r\n            <button className={styles.addNewContactForm_buttonSave}>Save</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'addNewContact'})(AddNewContactForm)","import React from \"react\";\r\nimport styles from \"./Contacts.module.css\"\r\nimport AddNewContactForm from \"./addNewContactForm/AddNewContactForm\";\r\n\r\nconst Contacts = (props) => {\r\n\r\n    return <div className={styles.wrapper}>\r\n        {props.addNewContactForm &&\r\n        <AddNewContactForm onSubmit={props.onSubmitNewContact} setAddNewContactForm={props.setAddNewContactForm}/>}\r\n        <div className={styles.header}>\r\n            <h2>Contacts</h2>\r\n            <button>Search</button>\r\n            <button onClick={() => props.setAddNewContactForm(true)}>Add new</button>\r\n        </div>\r\n        <div className={styles.contacts}>\r\n            {props.contacts}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Contacts\r\n\r\n\r\n\r\n\r\n","import styles from \"./Contact.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../../redux-forms/FormControls\";\r\nimport {maxLength20, number, required} from \"../../../redux-forms/validators\";\r\n\r\nconst ContactEditForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={styles.contact}>\r\n        <div className={styles.row}>\r\n            <Field name='firstName' component={Input} type='text' placeholder='First Name'/>\r\n            <Field name='secondName' component='input' type='text' placeholder='Second Name'/>\r\n        </div>\r\n        <div className={styles.row}>\r\n            <Field name='number' component={Input} validate={[required, number, maxLength20]} type='text' placeholder='Number'/>\r\n            <Field name='address' component='input' type='text' placeholder='Address'/>\r\n        </div>\r\n        <Field name='description' component='textarea' placeholder='Description'/>\r\n        <div className={styles.buttons}>\r\n        <button>Save</button>\r\n        <button onClick={() => props.delete(props.id)}>Delete</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'contactEdit'})(ContactEditForm)\r\n\r\n","import styles from \"./Contact.module.css\";\r\nimport avatar from \"../../../assets/images/avatar.png\";\r\nimport React, {useState} from \"react\";\r\nimport ContactEditForm from \"./ContactEditModeForm\";\r\n\r\nconst Contact = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onSubmit = (contact) => {\r\n        let newContactsArray =  props.contacts.map(c => {\r\n            if (c.id === contact.id)\r\n                return contact;\r\n            return c\r\n        });\r\n        props.editContact(newContactsArray);\r\n        setEditMode(false)\r\n    };\r\n\r\n    return editMode ? <ContactEditForm id={props.id} delete={props.delete} onSubmit={onSubmit} initialValues={props} setEditMode={setEditMode}/> :\r\n        <div className={styles.contact}>\r\n            <img src={avatar} alt=\"contact avatar\"/>\r\n            <span className={styles.contact_name}>{props.firstName + '  ' + props.secondName}</span>\r\n            <div>{props.number}<span className={styles.contact_address}>{props.address}</span></div>\r\n            <div>{props.description}</div>\r\n            <div className={styles.contact_button}>\r\n                <button onClick={() => {setEditMode(true)}}>edit</button>\r\n            </div>\r\n        </div>\r\n};\r\n\r\nexport default Contact","import {connect} from \"react-redux\";\r\nimport {addNewContact, deleteContact, editContact} from \"../../redux/contacts-reducer\";\r\nimport Contacts from \"./Contacts\";\r\nimport React, {useState} from \"react\";\r\nimport Contact from \"./contact/Contact\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst ContactsContainer = (props) => {\r\n\r\n    const [addNewContactForm, setAddNewContactForm] = useState(false);\r\n\r\n    const onClickDelete = (id) => {\r\n        const newContactsArray = props.contacts.filter((c) => c.id !== id);\r\n        props.deleteContact(newContactsArray)\r\n    };\r\n\r\n    const onSubmitNewContact = (formData) => {\r\n        props.addNewContact(formData);\r\n        props.setAddNewContactForm(false)\r\n    };\r\n\r\n    let contacts = props.contacts.map((c) => {\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n        return (\r\n                <Contact contacts={props.contacts}\r\n                         editContact={props.editContact}\r\n                         delete={onClickDelete}\r\n                         key={c.id} {...c}/>\r\n            )\r\n        }\r\n    );\r\n\r\n    return <Contacts onSubmitNewContact={onSubmitNewContact}\r\n                     contacts={contacts}\r\n                     addNewContactForm={addNewContactForm}\r\n                     setAddNewContactForm={setAddNewContactForm}/>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.contacts,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {addNewContact, deleteContact, editContact})(ContactsContainer)\r\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Login from \"./components/login/LoginContainer\";\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport ContactsContainer from \"./components/contacts/ContactsContainer\";\n\nconst App = (props) => {\n  return (\n      <Suspense fallback={<div>Загрузка</div>}>\n        <Switch>\n            <Route exact path='/login'\n            render={() =>  <Login/>}/>\n            <Route exact path='/contacts'\n                   render={() =>  <ContactsContainer/>}/>\n            <Redirect exact from=\"/\" to=\"/login\" />\n            <Route render={() => <div>404 NOT FOUND</div>}/>\n        </Switch>\n      </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport contactsReducer from \"./contacts-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"AddNewContactForm_contact__qbjEA\",\"addNewContactForm\":\"AddNewContactForm_addNewContactForm__3YhXm\",\"addNewContactForm_buttonClose\":\"AddNewContactForm_addNewContactForm_buttonClose__3zxkY\",\"addNewContactForm_buttonSave\":\"AddNewContactForm_addNewContactForm_buttonSave__1mCDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__12-i2\",\"loginForm\":\"Login_loginForm__ai_oX\",\"buttonsBlock\":\"Login_buttonsBlock__3kkRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__3MlH4\",\"header\":\"Contacts_header__2P2v_\",\"contacts\":\"Contacts_contacts__1_5oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__YuTyy\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.de470447.png\";"],"sourceRoot":""}